// Code generated by entc, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/dictor/jaeminbot/ent/command"
	"github.com/dictor/jaeminbot/ent/schema"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	commandFields := schema.Command{}.Fields()
	_ = commandFields
	// commandDescKeyword is the schema descriptor for keyword field.
	commandDescKeyword := commandFields[1].Descriptor()
	// command.KeywordValidator is a validator for the "keyword" field. It is called by the builders before save.
	command.KeywordValidator = commandDescKeyword.Validators[0].(func(string) error)
	// commandDescCreatedAt is the schema descriptor for created_at field.
	commandDescCreatedAt := commandFields[3].Descriptor()
	// command.DefaultCreatedAt holds the default value on creation for the created_at field.
	command.DefaultCreatedAt = commandDescCreatedAt.Default.(func() time.Time)
	// commandDescUpdatedAt is the schema descriptor for updated_at field.
	commandDescUpdatedAt := commandFields[4].Descriptor()
	// command.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	command.DefaultUpdatedAt = commandDescUpdatedAt.Default.(func() time.Time)
	// commandDescCreator is the schema descriptor for creator field.
	commandDescCreator := commandFields[5].Descriptor()
	// command.CreatorValidator is a validator for the "creator" field. It is called by the builders before save.
	command.CreatorValidator = commandDescCreator.Validators[0].(func(string) error)
	// commandDescServer is the schema descriptor for server field.
	commandDescServer := commandFields[6].Descriptor()
	// command.ServerValidator is a validator for the "server" field. It is called by the builders before save.
	command.ServerValidator = commandDescServer.Validators[0].(func(string) error)
}
