// Code generated by entc, DO NOT EDIT.

package resultlog

const (
	// Label holds the string label denoting the resultlog type in the database.
	Label = "result_log"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldLevel holds the string denoting the level field in the database.
	FieldLevel = "level"
	// FieldLog holds the string denoting the log field in the database.
	FieldLog = "log"
	// EdgeCommand holds the string denoting the command edge name in mutations.
	EdgeCommand = "command"
	// Table holds the table name of the resultlog in the database.
	Table = "result_logs"
	// CommandTable is the table that holds the command relation/edge. The primary key declared below.
	CommandTable = "command_logs"
	// CommandInverseTable is the table name for the Command entity.
	// It exists in this package in order to avoid circular dependency with the "command" package.
	CommandInverseTable = "commands"
)

// Columns holds all SQL columns for resultlog fields.
var Columns = []string{
	FieldID,
	FieldLevel,
	FieldLog,
}

var (
	// CommandPrimaryKey and CommandColumn2 are the table columns denoting the
	// primary key for the command relation (M2M).
	CommandPrimaryKey = []string{"command_id", "result_log_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}
